// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.106.4 clang-1700.0.9.2)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name VncDemonNFramework
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import Foundation
import Swift
import UIKit
@_exported import VncDemonNFramework
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor @preconcurrency public class VNCViewController : UIKit.UIViewController, WebKit.WKUIDelegate {
  @objc @_Concurrency.MainActor @preconcurrency public var webView: WebKit.WKWebView!
  @objc @_Concurrency.MainActor @preconcurrency public var device: VncDemonNFramework.SkDevice
  @objc @_Concurrency.MainActor @preconcurrency public var tryTimes: Swift.Int
  @objc @_Concurrency.MainActor @preconcurrency public var clientId: Swift.Int
  @objc @_Concurrency.MainActor @preconcurrency public var CONFIG_TYPE_KEY: Swift.String
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func loadView()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @objc get
  }
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @objc @_Concurrency.MainActor @preconcurrency public static func saveValue(_ value: Swift.Int, forKey key: Swift.String)
  @_Concurrency.MainActor @preconcurrency public static func getValue(forKey key: Swift.String) -> Swift.Int?
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class SkDevice : ObjectiveC.NSObject {
  @objc public var sn: Swift.String
  @objc override dynamic public init()
  @objc public init(sn: Swift.String, name: Swift.String, warnCount: Swift.Int = 0, group: Swift.String = "默认分组")
  @objc deinit
}
